class Solution {
public:
    bool safe(vector<vector<char>>& board, int row, int col, char n) {
        for (int i = 0; i < 9; i++) {
            if (board[row][i] == n || board[i][col] == n) {
                return false;
            }
        }
        int boxRow = 3 * (row / 3);
        int boxCol = 3 * (col / 3);
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                if (board[boxRow + i][boxCol + j] == n) {
                    return false;
                }
            }
        }
        return true;
    }

    bool isValidSudoku(vector<vector<char>>& board) {
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                if (board[i][j] != '.') {
                    char num = board[i][j];
                    board[i][j] = '.'; 
                    if (!safe(board, i, j, num)) {
                        return false;
                    }
                    board[i][j] = num;
                }
            }
        }
        return true;
    }
};
