/*
class Node {
public:
    int data;
    Node *left;
    Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};
*/

class Solution {
public:
    vector<int> zigZagTraversal(Node* root) {
        vector<int> ans;
        if (!root) return ans;

        queue<Node*> q;
        q.push(root);
        bool leftToRight = true;

        while (!q.empty()) {
            int n = q.size();
            vector<int> temp;

            for (int i = 0; i < n; ++i) {
                Node* top = q.front();
                q.pop();

                temp.push_back(top->data);

                if (top->left) q.push(top->left);
                if (top->right) q.push(top->right);
            }

            if (!leftToRight) reverse(temp.begin(), temp.end());
            ans.insert(ans.end(), temp.begin(), temp.end());

            leftToRight = !leftToRight;
        }

        return ans;
    }
};
