#include <vector>
#include <queue>
#include <algorithm>

using namespace std;

class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        if (!root) return {};  // Handle empty tree case

        vector<vector<int>> ans;
        queue<TreeNode*> q;
        q.push(root);

        while (!q.empty()) {
            int size = q.size();  // Number of nodes in the current level
            vector<int> level;

            for (int i = 0; i < size; i++) {
                TreeNode* top = q.front();
                q.pop();
                level.push_back(top->val);

                if (top->left) q.push(top->left);
                if (top->right) q.push(top->right);
            }

            ans.push_back(level);
        }

        reverse(ans.begin(), ans.end());
        return ans;
    }
};
