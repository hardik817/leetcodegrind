/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution
{
public:
    void solve(vector<vector<int>> &ans, TreeNode *root, int targetsum, vector<int> temp)
    {
        if (root == nullptr)
        {
            return;
        }
        targetsum = targetsum - root->val;
        temp.push_back(root->val);
        if (targetsum == 0 && !root->left && !root->right)
        {
            ans.push_back(temp);
            return;
        }
        solve(ans, root->left, targetsum, temp);
        solve(ans, root->right, targetsum, temp);
    }
    vector<vector<int>> pathSum(TreeNode *root, int targetSum)
    {
        vector<vector<int>> ans;
        vector<int> temp;
        solve(ans, root, targetSum, temp);
        return ans;
    }
};