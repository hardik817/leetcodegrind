/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution
{
public:
    TreeNode *solve(ListNode *&head, int start, int end)
    {
        if (start > end)
            return NULL;

        int mid = start + (end - start) / 2;
        TreeNode *leftSubtree = solve(head, start, mid - 1);
        TreeNode *root = new TreeNode(head->val);
        head = head->next;
        root->right = solve(head, mid + 1, end);
        root->left = leftSubtree;

        return root;
    }

    TreeNode *sortedListToBST(ListNode *head)
    {
        int n = 0;
        ListNode *temp = head;

        while (temp)
        {
            n++;
            temp = temp->next;
        }

        return solve(head, 0, n - 1);
    }
};
lee