class Solution {
public:
    long long minCost(vector<int>& arr, vector<int>& brr, long long k) {
        int n = arr.size();
        
        bool identical = true;
        for(int i = 0; i < n; i++) {
            if(arr[i] != brr[i]) {
                identical = false;
                break;
            }
        }
        if(identical) return 0;
        
        vector<int> sortedArr = arr;
        vector<int> sortedBrr = brr;
        sort(sortedArr.begin(), sortedArr.end());
        sort(sortedBrr.begin(), sortedBrr.end());
        
        long long costWithoutRearrange = 0;
        for(int i = 0; i < n; i++) {
            costWithoutRearrange += abs(arr[i] - brr[i]);
        }
        
        long long costWithRearrange = k; 
        for(int i = 0; i < n; i++) {
            costWithRearrange += abs(sortedArr[i] - sortedBrr[i]);
        }
        return min(costWithoutRearrange, costWithRearrange);
    }
};