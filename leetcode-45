class Solution {
public:
    int solve(vector<int> &nums, int curr, vector<int> &dp) {
        if (curr >= nums.size() - 1) return 0;
        if (dp[curr] != -1) return dp[curr];
        
        int min_steps = INT_MAX;
        int max_jump = nums[curr];

        for (int i = 1; i <= max_jump; i++) { 
            if (curr + i < nums.size()) {
                int steps = solve(nums, curr + i, dp);
                if (steps != INT_MAX) {
                    min_steps = min(min_steps, 1 + steps); 
                }
            }
        }

        return dp[curr] = min_steps;
    }

    int jump(vector<int>& nums) {
        int n = nums.size();
        vector<int> dp(n, -1);
        return solve(nums, 0, dp);
    }
};
