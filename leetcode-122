class Solution {
public:    
    int solve(vector<int>& prices, int i, int bought, vector<vector<int>>& dp) {
        if (i == prices.size()) return 0;
        if (dp[i][bought] != -1) return dp[i][bought];

        int hold = solve(prices, i + 1, bought, dp);
        int buy = INT_MIN, sell = INT_MIN;

        if (bought == 0) {
            buy = solve(prices, i + 1, 1, dp) - prices[i];
        }
        else{
            sell = solve(prices, i + 1, 0, dp) + prices[i];
        }

        return dp[i][bought] = max({hold, buy, sell});
    }

    int maxProfit(vector<int>& prices) {
        int n = prices.size();
        vector<vector<int>> dp(n, vector<int>(2, -1));
        return solve(prices, 0, 0, dp);
    }
};
