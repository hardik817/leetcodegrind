class Solution
{
public:
    int maxProfit(vector<int> &prices)
    {
        int n = prices.size();
        if (n == 0)
            return 0;

        vector<vector<vector<int>>> dp(n + 1, vector<vector<int>>(2, vector<int>(5, 0)));

        for (int i = n - 1; i >= 0; i--)
        {
            for (int bought = 0; bought <= 1; bought++)
            {
                for (int num = 3; num >= 0; num--)
                {
                    int hold = dp[i + 1][bought][num];
                    int buy = INT_MIN, sell = INT_MIN;

                    if (bought == 0)
                    {
                        buy = dp[i + 1][1][num + 1] - prices[i];
                    }
                    else
                    {
                        sell = dp[i + 1][0][num + 1] + prices[i];
                    }

                    dp[i][bought][num] = max({hold, buy, sell});
                }
            }
        }

        return dp[0][0][0];
    }
};
